name: build-header-validator
on:
  push:
    branches: develop
  pull_request:
    branches:
      - develop

jobs:

  create_release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.release_version.outputs.RELEASE_VERSION }}
      RELEASE_URL: ${{ steps.upload_url.outputs.RELEASE_URL }}
    steps:
      - uses: actions/checkout@v3
      - run: echo RELEASE_VERSION="$(grep 'version:' pubspec.yaml | sed -En 's/^version:\s(.*)\+.*$/\1/p')+${{github.run_number}}" >> $GITHUB_ENV
      - uses: actions/create-release@v1
        id: create_release
        continue-on-error: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }}
      - id: release_version
        run: echo "RELEASE_VERSION=${{ env.RELEASE_VERSION }}" >> $GITHUB_OUTPUT
      - id: upload_url
        run: echo "RELEASE_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_OUTPUT

  linux-build:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - run: flutter config --enable-linux-desktop
      - run: flutter build linux --release --build-number ${{github.run_number}}
      - run: echo ZIP_NAME="mesh-validate-auth-linux-${{needs.create_release.outputs.RELEASE_VERSION}}.zip" >> $GITHUB_ENV
      - run: |
          cd build/linux/x64/release/bundle/
          zip -r "${{ env.ZIP_NAME }}" .

      - name: upload bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{needs.create_release.outputs.RELEASE_URL}}
          asset_name: ${{ env.ZIP_NAME }}
          asset_path: build/linux/x64/release/bundle/${{ env.ZIP_NAME }}
          asset_content_type: application/zip

  windows-build:
    runs-on: windows-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: flutter config --enable-windows-desktop
      - run: flutter build windows --release --build-number ${{github.run_number}}

      - uses: thedoctor0/zip-release@main
        with:
          directory: 'build\windows\runner\Release'
          type: 'zip'
          filename: 'build\windows\runner\Release\mesh-validate-auth-windows-${{needs.create_release.outputs.RELEASE_VERSION}}.zip'

      - name: upload bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: '${{needs.create_release.outputs.RELEASE_URL}}'
          asset_name: 'mesh-validate-auth-windows-${{needs.create_release.outputs.RELEASE_VERSION}}.zip'
          asset_path:  'build\windows\runner\Release\mesh-validate-auth-windows-${{needs.create_release.outputs.RELEASE_VERSION}}.zip'
          asset_content_type: application/zip
